server:
  port: 80

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
#    org.springframework.boot.autoconfigure: DEBUG


spring:
  thymeleaf:
    cache: false
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: your-app-client-id
            client-secret: your-app-client-secret
          gitee:
            client-id: your-app-client-id
            client-secret: your-app-client-secret
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/{action}/oauth2/code/{registrationId}'

            client-authentication-method: post # default: basic
            scope: user_info # default: emptySet

            client-name: gitee_login # optional
          demo:
            client-id: demo-client-id
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/{action}/oauth2/code/{registrationId}' # http://demo.com/login/oauth/code/demo
            client-name: demos里的 oauth2-auth-server
          qq:
            client-id: xxx
            client-secret: xxxx
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/{action}/oauth2/code/{registrationId}' # http://demo.com/login/oauth/code/qq
            client-name: QQ

          messaging-client-auth-code:
            provider: demo
            client-id: messaging-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/authorized"
            scope: message.read,message.write
          messaging-client-client-creds:
            provider: keycloak
            client-id: messaging-client
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: message.read,message.write
          messaging-client-password:
            provider: keycloak
            client-id: messaging-client
            client-secret: secret
            authorization-grant-type: password
            scope: message.read,message.write

        provider:
          keycloak:
            authorization-uri: http://authServer.com:8081/oauth/authorize
            token-uri: http://authServer.com:8081/oauth/token

          gitee:
            authorization-uri: https://gitee.com/oauth/authorize
            token-uri: https://gitee.com/oauth/token
            user-info-uri: https://gitee.com/api/v5/user
            user-name-attribute: id
          demo:
            authorization-uri: http://authServer.com:8081/oauth/authorize # host 文件中 authServer 对应着 127.0.0.1
            token-uri: http://authServer.com:8081/oauth/token
            user-info-uri: http://resourceServer.com:8000/user
            user-name-attribute: userName
          qq:
            authorization-uri: https://graph.qq.com/oauth2.0/authorize # host 文件中 authServer 对应着 127.0.0.1
            token-uri: https://graph.qq.com/oauth2.0/token
            user-info-uri: https://graph.qq.com/user/get_user_info
            user-name-attribute: nickname


messages:
  base-uri: http://resourceServer.com:8000/messages